name: CICD
on:
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Install stable toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         override: true

  #     - name: Cross build with all features
  #       uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true 
  #         command: build
  #         args: --release --all-features --verbose

  #    # - name: Setup Cargo Lambda
  #    #   uses: zerj9/setup-cargo-lambda@v0.1.0

  #    # - name: Setup Zig
  #    #   uses: goto-bus-stop/setup-zig@v1.3.0

  #    # - name: Cargo lambda build
  #    #   run: |
  #    #     cargo lambda build --output-format zip --release

  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DATABASE_ROOT_PASSWORD }}
          MYSQL_DATABASE: test_db
          MYSQL_USER: ${{ secrets.DATABASE_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set DATABASE_URL to dotenv
        run: echo "DATABASE_URL=mysql://${{ secrets.DATABASE_USERNAME }}:${{ secrets.DATABASE_PASSWORD }}@127.0.0.1:3306/test_db" >> .env

      - name: Show Docker containers
        run: docker ps -a

      - name: MySQL alive check with ping
        run: mysqladmin ping --protocol=tcp -h127.0.0.1 -P3306 -u${{ secrets.DATABASE_USERNAME }} -p${{ secrets.DATABASE_PASSWORD }}

      - name: Display mysql.user
        # run: mysql --protocol=tcp -h127.0.0.1 -P3306 -u${{ secrets.DATABASE_USERNAME }} -p${{ secrets.DATABASE_PASSWORD }} -e "SELECT user, host FROM mysql.user"
        run: mysql --protocol=tcp -h127.0.0.1 -P3306 -uroot -p${{ secrets.DATABASE_ROOT_PASSWORD }} -e "SELECT user, host FROM mysql.user"

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install sqlx-cli
        uses: baptiste0928/cargo-install@v1
        with:
          crate: sqlx-cli

      - name: Install cargo-watch
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-watch

      - name: Database setup
        run: sqlx database create

      - name: Database migrate
        run: sqlx migrate run

      - name: Setup Cargo Lambda
        uses: zerj9/setup-cargo-lambda@v0.1.0

      - name: Cargo lambda watch, invoke and cargo test
        run: |
          cargo lambda watch &
          sleep 1
          curl -L http://localhost:9000/lambda-url/lambda_function_01
          cargo lambda invoke lambda_function_01 --data-ascii "{}"
          cargo test -- --test-threads=1

      - name: Clean up some process
        run: ps aux | grep "watch" | grep -v grep | awk '{ print "kill -9", $2 }' | sudo sh